{
  "version": 2,
  "projects": {
    "eslint-config": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/eslint-config",
      "sourceRoot": "libs/eslint-config/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/eslint-config/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/eslint-config"],
          "options": {
            "jestConfig": "libs/eslint-config/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "build": {
          "executor": "@nrwl/js:tsc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/eslint-config",
            "tsConfig": "libs/eslint-config/tsconfig.lib.json",
            "packageJson": "libs/eslint-config/package.json",
            "main": "libs/eslint-config/src/index.ts",
            "assets": ["libs/eslint-config/*.md"]
          }
        },
        "version": {
          "executor": "@jscutlery/semver:version",
          "options": {
            "postTargets": ["eslint-config:github", "eslint-config:deploy"]
          }
        },
        "github": {
          "executor": "@jscutlery/semver:github",
          "options": {
            "tag": "${tag}",
            "notesFile": "libs/eslint-config/CHANGELOG.md"
          }
        },
        "deploy": {
          "executor": "ngx-deploy-npm:deploy",
          "options": {
            "access": "public"
          }
        }
      },
      "tags": []
    },
    "goldgetters": {
      "root": "apps/goldgetters",
      "sourceRoot": "apps/goldgetters",
      "projectType": "application",
      "tags": ["platform:react", "type:app", "scope:goldgetters"],
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "defaultConfiguration": "production",
          "options": {
            "root": "apps/goldgetters",
            "outputPath": "dist/apps/goldgetters"
          },
          "configurations": {
            "development": {
              "outputPath": "tmp/apps/goldgetters"
            },
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "defaultConfiguration": "development",
          "options": {
            "buildTarget": "goldgetters:build",
            "dev": true
          },
          "configurations": {
            "development": {
              "buildTarget": "goldgetters:build:development",
              "dev": true
            },
            "production": {
              "buildTarget": "goldgetters:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "goldgetters:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/goldgetters"],
          "options": {
            "jestConfig": "apps/goldgetters/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/goldgetters/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "goldgetters-e2e": {
      "root": "apps/goldgetters-e2e",
      "sourceRoot": "apps/goldgetters-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/goldgetters-e2e/cypress.json",
            "devServerTarget": "goldgetters:serve:development",
            "testingType": "e2e"
          },
          "configurations": {
            "production": {
              "devServerTarget": "goldgetters:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/goldgetters-e2e/**/*.{js,ts}"]
          }
        }
      },
      "tags": [],
      "implicitDependencies": ["goldgetters"]
    },
    "goldgetters-ui-atoms": {
      "root": "libs/goldgetters/ui/atoms",
      "sourceRoot": "libs/goldgetters/ui/atoms/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:atoms",
        "scope:goldgetters"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/goldgetters/ui/atoms/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/goldgetters/ui/atoms"],
          "options": {
            "jestConfig": "libs/goldgetters/ui/atoms/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "goldgetters-ui-molecules": {
      "root": "libs/goldgetters/ui/molecules",
      "sourceRoot": "libs/goldgetters/ui/molecules/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:molecules",
        "scope:goldgetters"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/goldgetters/ui/molecules/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/goldgetters/ui/molecules"],
          "options": {
            "jestConfig": "libs/goldgetters/ui/molecules/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "goldgetters-ui-organisms": {
      "root": "libs/goldgetters/ui/organisms",
      "sourceRoot": "libs/goldgetters/ui/organisms/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:organisms",
        "scope:goldgetters"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/goldgetters/ui/organisms/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/goldgetters/ui/organisms"],
          "options": {
            "jestConfig": "libs/goldgetters/ui/organisms/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "goldgetters-ui-templates": {
      "root": "libs/goldgetters/ui/templates",
      "sourceRoot": "libs/goldgetters/ui/templates/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:templates",
        "scope:goldgetters"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/goldgetters/ui/templates/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/goldgetters/ui/templates"],
          "options": {
            "jestConfig": "libs/goldgetters/ui/templates/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "nx-remotecache-s3": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/nx-remotecache-s3",
      "sourceRoot": "libs/nx-remotecache-s3/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/nx-remotecache-s3/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nx-remotecache-s3"],
          "options": {
            "jestConfig": "libs/nx-remotecache-s3/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "build": {
          "executor": "@nrwl/js:tsc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/nx-remotecache-s3",
            "tsConfig": "libs/nx-remotecache-s3/tsconfig.lib.json",
            "packageJson": "libs/nx-remotecache-s3/package.json",
            "main": "libs/nx-remotecache-s3/src/index.ts",
            "assets": ["libs/nx-remotecache-s3/*.md"],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          }
        },
        "version": {
          "executor": "@jscutlery/semver:version",
          "options": {
            "postTargets": [
              "nx-remotecache-s3:github",
              "nx-remotecache-s3:deploy"
            ]
          }
        },
        "github": {
          "executor": "@jscutlery/semver:github",
          "options": {
            "tag": "${tag}",
            "notesFile": "libs/nx-remotecache-s3/CHANGELOG.md"
          }
        },
        "deploy": {
          "executor": "ngx-deploy-npm:deploy",
          "options": {
            "access": "public"
          }
        }
      },
      "tags": []
    },
    "pellegrims-dev": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/pellegrims-dev",
      "sourceRoot": "apps/pellegrims-dev",
      "projectType": "application",
      "tags": ["platform:react", "type:app", "scope:pellegrims-dev"],
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/pellegrims-dev",
            "outputPath": "dist/apps/pellegrims-dev"
          },
          "configurations": {
            "production": {},
            "development": {
              "outputPath": "tmp/apps/pellegrims-dev"
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "pellegrims-dev:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "pellegrims-dev:build:production",
              "dev": false
            },
            "development": {
              "buildTarget": "pellegrims-dev:build:development",
              "dev": true
            }
          },
          "defaultConfiguration": "development"
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "pellegrims-dev:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/pellegrims-dev"],
          "options": {
            "jestConfig": "apps/pellegrims-dev/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/pellegrims-dev/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "pellegrims-dev-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/pellegrims-dev-e2e",
      "sourceRoot": "apps/pellegrims-dev-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/pellegrims-dev-e2e/cypress.json",
            "devServerTarget": "pellegrims-dev:serve",
            "tsConfig": "apps/pellegrims-dev-e2e/tsconfig.json"
          },
          "configurations": {
            "production": {
              "devServerTarget": "pellegrims-dev:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/pellegrims-dev-e2e/**/*.{js,ts}"]
          }
        }
      },
      "tags": [],
      "implicitDependencies": ["pellegrims-dev"]
    },
    "pellegrims-dev-ui-atoms": {
      "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/pellegrims-dev/ui/atoms",
      "sourceRoot": "libs/pellegrims-dev/ui/atoms/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:atoms",
        "scope:pellegrims-dev"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/pellegrims-dev/ui/atoms/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pellegrims-dev/ui/atoms"],
          "options": {
            "jestConfig": "libs/pellegrims-dev/ui/atoms/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "pellegrims-dev-ui-molecules": {
      "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/pellegrims-dev/ui/molecules",
      "sourceRoot": "libs/pellegrims-dev/ui/molecules/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:molecules",
        "scope:pellegrims-dev"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/pellegrims-dev/ui/molecules/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pellegrims-dev/ui/molecules"],
          "options": {
            "jestConfig": "libs/pellegrims-dev/ui/molecules/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "pellegrims-dev-ui-organisms": {
      "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/pellegrims-dev/ui/organisms",
      "sourceRoot": "libs/pellegrims-dev/ui/organisms/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:organisms",
        "scope:pellegrims-dev"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/pellegrims-dev/ui/organisms/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pellegrims-dev/ui/organisms"],
          "options": {
            "jestConfig": "libs/pellegrims-dev/ui/organisms/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "pellegrims-dev-ui-templates": {
      "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/pellegrims-dev/ui/templates",
      "sourceRoot": "libs/pellegrims-dev/ui/templates/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:templates",
        "scope:pellegrims-dev"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": [
              "libs/pellegrims-dev/ui/templates/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pellegrims-dev/ui/templates"],
          "options": {
            "jestConfig": "libs/pellegrims-dev/ui/templates/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-markdown": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/shared/markdown",
      "sourceRoot": "libs/shared/markdown/src",
      "projectType": "library",
      "tags": ["scope:shared"],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/shared/markdown/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/markdown"],
          "options": {
            "jestConfig": "libs/shared/markdown/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-ui-atoms": {
      "root": "libs/shared/ui/atoms",
      "sourceRoot": "libs/shared/ui/atoms/src",
      "projectType": "library",
      "tags": [
        "platform:react",
        "type:ui",
        "atomic-design:atoms",
        "scope:shared"
      ],
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/shared/ui/atoms/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared/ui/atoms"],
          "options": {
            "jestConfig": "libs/shared/ui/atoms/jest.config.ts",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "$schema": "./node_modules/nx/schemas/workspace-schema.json"
}
